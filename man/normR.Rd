% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\docType{package}
\name{normR}
\alias{DifferentialPeakCalling}
\alias{PeakCalling}
\alias{diffR-generic}
\alias{enrichR-generic}
\alias{normR}
\alias{normR-package}
\alias{normr}
\alias{regimeR-generic}
\title{Enrichment, Difference and Regime Calling in ChIP-seq data.}
\usage{
enrichR(treatment, control, genome, ...)

diffR(treatment, control, genome, ...)

regimeR(treatment, control, genome, models, ...)
}
\arguments{
\item{treatment}{An \code{integer} vector of treatment counts or a
\code{character} pointing to the treatment bam file. In the latter case an
"\code{treatment}.bai" index file should exist in the same folder.}

\item{control}{An \code{integer} vector of control counts or a
\link{character} pointing to the control bam file. In the latter case an
"\code{control}.bai" index file should exist in the same folder.}

\item{genome}{Either \code{NULL} (default), a \code{character} specifying a
USCS genome identifier  or a \link{data.frame} consisting of two columns
(see Details).}

\item{...}{Arguments passed down to the respective functions See
\code{\link{enrichR}}, \code{\link{diffR}} and \code{\link{regimeR}}.}

\item{models}{An \code{integer} specifying the number of mixture
components to fit [\code{\link{regimeR}} only]. Default is \code{3}.}
}
\value{
A \code{\link{NormRFit}} container holding results of the fit.
}
\description{
A correct background estimation is crucial for calling enrichment and
differences in ChIP-seq data. \code{\link{normR}} provides robust
normalization and difference calling in ChIP-seq and alike data. In brief, a
binomial mixture model with a given number of components is fit to read
count data for a treatment and control experiment. Therein, computational
performance is improved by fitting a log-space model via Expectation
Maximization in C++. Convergence is achieved by a threshold on
the minimum change in model loglikelihood. After the model fit has converged,
a robust background estimate is obtained. This estimate accounts for the
effect of enrichment in certain regions and, therefore, represents an
appropriate null hypothesis. This robust background is used to identify
significantly enriched or depleted regions with respect to
control. Moreover, a standardized enrichment for each bin is calculated
based on the fitted background component. For convenience, read count
vectors can be obtained directly from bam files when a compliant chromosome
annotation is given. Please refer to the individual documentations of
functions for enrichment calling (\code{\link{enrichR}}), difference calling
(\code{\link{diffR}}) and enrichment regime calling (\code{\link{regimeR}}).

\code{\link{enrichR}}: Enrichment calling between \code{treatment}
(\emph{e.g.} ChIP-seq) and \code{control} (\emph{e.g.} Input).

\code{\link{diffR}}: Difference calling between \code{treatment}
(\emph{e.g.} ChIP-seq condition 1) and \code{control} (\emph{e.g.} ChIP-seq
condition 2).

\code{\link{regimeR}}: Enrichment regime calling between \code{treatment}
(\emph{e.g.} ChIP-seq) and \code{control} (\emph{e.g.} Input) with a
given number of model components. For example, 3 regimes recover background,
broad and peak enrichment.
}
\details{
Supplied count vectors for treatment and control should be of same length
and of type \code{integer}.

For convenience, read count vectors can be obtained directly from bam files.
In this case, please specify a bam file for treatment and control each and a
\code{genome}. Bam files should be indexed using samtools (\emph{i.e.}
samtools index file file.bai). Furthermore, bam files should contain a valid
header with given chromosome names. If \code{genome == NULL}(default),
chromosome names will be read from treatment bamheader. Please be aware that
bamheader might contain irregular contigs and chrM which influence the fit.
Also be sure that treatment and control contain the same chromosomes.
Otherwise an error will be thrown. If \code{genome} is a \code{character},
\code{\link[GenomeInfoDb]{fetchExtendedChromInfoFromUCSC}} is used to resolve
this to a valid UCSC genome identifier (see
\url{https://genome.ucsc.edu/cgi-bin/hgGateway} for available genomes). In
this case, only assembled molecules will be considered (no circular). Please
check if your bam files obey this annotation. If \code{genome} is a
\code{data.frame}, it represents the chromosome specification. The first
column will be used as chromosome ID and the second column will be used as
the chromosome lengths.

The computational performance is improved by fitting a log-space model in
C++. Parallization is achieved in C++ via OpenMP (\url{http://openmp.org}).
}
\examples{
require(GenomicRanges)

### enrichR(): Calling Enrichment over Input
#load some example bamfiles
input <- system.file("extdata", "K562_Input.bam", package="normr")
chipK4 <- system.file("extdata", "K562_H3K4me3.bam", package="normr")
#region to count in (example files contain information only in this region)
gr <- GRanges("chr1", IRanges(22500000, 25000000))
#configure your counting strategy (see BamCountConfig-class)
countConfiguration <- countConfigSingleEnd(binsize = 1000,
                                           mapq = 30, shift = 100)
#invoke enrichR to call enrichment
enrich <- enrichR(treatment = chipK4, control = inputfile,
                  genome = gr,  countConfig = countConfiguration,
                  iterations = 10, procs = 1, verbose = TRUE)
#inspect the fit
enrich
summary(enrich)

## Not run:
#write significant regions to bed
#exportR(enrich, filename = "enrich.bed", fdr = 0.01)
#write normalized enrichment to bigWig
#exportR(enrich, filename = "enrich.bw")
## End(**Not run**)

### diffR(): Calling differences between two conditions
chipK36 <- system.file("extdata", "K562_H3K36me3.bam", package="normr")
diff <- diffR(treatment = chipK36, control = chipK4,
              genome = gr,  countConfig = countConfiguration,
              iterations = 10, procs = 1, verbose = TRUE)
summary(diff)

### regimeR(): Identification of broad and peak enrichment
regime <- regimeR(treatment = chipK36, control = chipK4, models = 3,
                  genome = gr,  countConfig = countConfiguration,
                  iterations = 10, procs = 1, verbose = TRUE)
summary(regime)
}
\author{
Johannes Helmuth \email{helmuth@molgen.mpg.de}
}
\seealso{
\code{\link{NormRFit-class}} for functions on accessing and
exporting the normR fit. \code{\link{NormRCountConfig-class}} for
configuration of the read counting procedure (binsize, mapping quality,...).
}

